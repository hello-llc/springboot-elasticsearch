package com.cun.util.es.db.mapper;

import com.cun.util.es.db.pojo.MetaTable;
import com.cun.util.es.db.pojo.MetaTableExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface MetaTableMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @SelectProvider(type=MetaTableSqlProvider.class, method="countByExample")
    long countByExample(MetaTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @DeleteProvider(type=MetaTableSqlProvider.class, method="deleteByExample")
    int deleteByExample(MetaTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @Delete({
        "delete from meta_table",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @Insert({
        "insert into meta_table (catalog_id, theme_id, ",
        "table_zh_name, table_name, ",
        "target_db_id, source_depart_id, ",
        "status, is_public, ",
        "give_url, give_type, ",
        "data_level, data_describe, ",
        "attention, create_time, ",
        "create_by, update_time, ",
        "update_by, net_id, ",
        "del_flag, create_flag)",
        "values (#{catalogId,jdbcType=BIGINT}, #{themeId,jdbcType=BIGINT}, ",
        "#{tableZhName,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, ",
        "#{targetDbId,jdbcType=BIGINT}, #{sourceDepartId,jdbcType=BIGINT}, ",
        "#{status,jdbcType=INTEGER}, #{isPublic,jdbcType=INTEGER}, ",
        "#{giveUrl,jdbcType=VARCHAR}, #{giveType,jdbcType=INTEGER}, ",
        "#{dataLevel,jdbcType=INTEGER}, #{dataDescribe,jdbcType=VARCHAR}, ",
        "#{attention,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, ",
        "#{createBy,jdbcType=INTEGER}, #{updateTime,jdbcType=DATE}, ",
        "#{updateBy,jdbcType=INTEGER}, #{netId,jdbcType=INTEGER}, ",
        "#{delFlag,jdbcType=BIT}, #{createFlag,jdbcType=BIT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(MetaTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @InsertProvider(type=MetaTableSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(MetaTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @SelectProvider(type=MetaTableSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="catalog_id", property="catalogId", jdbcType=JdbcType.BIGINT),
        @Result(column="theme_id", property="themeId", jdbcType=JdbcType.BIGINT),
        @Result(column="table_zh_name", property="tableZhName", jdbcType=JdbcType.VARCHAR),
        @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
        @Result(column="target_db_id", property="targetDbId", jdbcType=JdbcType.BIGINT),
        @Result(column="source_depart_id", property="sourceDepartId", jdbcType=JdbcType.BIGINT),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="is_public", property="isPublic", jdbcType=JdbcType.INTEGER),
        @Result(column="give_url", property="giveUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="give_type", property="giveType", jdbcType=JdbcType.INTEGER),
        @Result(column="data_level", property="dataLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="data_describe", property="dataDescribe", jdbcType=JdbcType.VARCHAR),
        @Result(column="attention", property="attention", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
        @Result(column="update_by", property="updateBy", jdbcType=JdbcType.INTEGER),
        @Result(column="net_id", property="netId", jdbcType=JdbcType.INTEGER),
        @Result(column="del_flag", property="delFlag", jdbcType=JdbcType.BIT),
        @Result(column="create_flag", property="createFlag", jdbcType=JdbcType.BIT)
    })
    List<MetaTable> selectByExample(MetaTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, catalog_id, theme_id, table_zh_name, table_name, target_db_id, source_depart_id, ",
        "status, is_public, give_url, give_type, data_level, data_describe, attention, ",
        "create_time, create_by, update_time, update_by, net_id, del_flag, create_flag",
        "from meta_table",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="catalog_id", property="catalogId", jdbcType=JdbcType.BIGINT),
        @Result(column="theme_id", property="themeId", jdbcType=JdbcType.BIGINT),
        @Result(column="table_zh_name", property="tableZhName", jdbcType=JdbcType.VARCHAR),
        @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
        @Result(column="target_db_id", property="targetDbId", jdbcType=JdbcType.BIGINT),
        @Result(column="source_depart_id", property="sourceDepartId", jdbcType=JdbcType.BIGINT),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="is_public", property="isPublic", jdbcType=JdbcType.INTEGER),
        @Result(column="give_url", property="giveUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="give_type", property="giveType", jdbcType=JdbcType.INTEGER),
        @Result(column="data_level", property="dataLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="data_describe", property="dataDescribe", jdbcType=JdbcType.VARCHAR),
        @Result(column="attention", property="attention", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
        @Result(column="update_by", property="updateBy", jdbcType=JdbcType.INTEGER),
        @Result(column="net_id", property="netId", jdbcType=JdbcType.INTEGER),
        @Result(column="del_flag", property="delFlag", jdbcType=JdbcType.BIT),
        @Result(column="create_flag", property="createFlag", jdbcType=JdbcType.BIT)
    })
    MetaTable selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MetaTableSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MetaTable record, @Param("example") MetaTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MetaTableSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MetaTable record, @Param("example") MetaTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MetaTableSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MetaTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meta_table
     *
     * @mbg.generated
     */
    @Update({
        "update meta_table",
        "set catalog_id = #{catalogId,jdbcType=BIGINT},",
          "theme_id = #{themeId,jdbcType=BIGINT},",
          "table_zh_name = #{tableZhName,jdbcType=VARCHAR},",
          "table_name = #{tableName,jdbcType=VARCHAR},",
          "target_db_id = #{targetDbId,jdbcType=BIGINT},",
          "source_depart_id = #{sourceDepartId,jdbcType=BIGINT},",
          "status = #{status,jdbcType=INTEGER},",
          "is_public = #{isPublic,jdbcType=INTEGER},",
          "give_url = #{giveUrl,jdbcType=VARCHAR},",
          "give_type = #{giveType,jdbcType=INTEGER},",
          "data_level = #{dataLevel,jdbcType=INTEGER},",
          "data_describe = #{dataDescribe,jdbcType=VARCHAR},",
          "attention = #{attention,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=DATE},",
          "create_by = #{createBy,jdbcType=INTEGER},",
          "update_time = #{updateTime,jdbcType=DATE},",
          "update_by = #{updateBy,jdbcType=INTEGER},",
          "net_id = #{netId,jdbcType=INTEGER},",
          "del_flag = #{delFlag,jdbcType=BIT},",
          "create_flag = #{createFlag,jdbcType=BIT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(MetaTable record);
}